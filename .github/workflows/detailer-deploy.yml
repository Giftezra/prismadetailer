name: Deploy Detailer App

on:
  push:
    branches: [master]

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  EAS_PROJECT_ID: ${{ secrets.EAS_PROJECT_ID}}

jobs:
  # Job 1: Deploy Detailer Mobile App (OTA Updates)
  deploy-mobile-app:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./prisma_detailer

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./prisma_detailer/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Setup EAS CLI
        run: |
          npm install -g @expo/cli@latest eas-cli@latest
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Determine update type and branch
        id: update-info
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "branch=production" >> $GITHUB_OUTPUT
            echo "message=üöÄ Production update: ${{ github.event.head_commit.message }}" >> $GITHUB_OUTPUT
            echo "channel=production" >> $GITHUB_OUTPUT
            echo "environment=production" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "branch=development" >> $GITHUB_OUTPUT
            echo "message=üîß Development update: ${{ github.event.head_commit.message }}" >> $GITHUB_OUTPUT
            echo "channel=development" >> $GITHUB_OUTPUT
            echo "environment=development" >> $GITHUB_OUTPUT
          else
            echo "branch=staging" >> $GITHUB_OUTPUT
            echo "message=üß™ Staging update: ${{ github.event.head_commit.message }}" >> $GITHUB_OUTPUT
            echo "channel=staging" >> $GITHUB_OUTPUT
            echo "environment=staging" >> $GITHUB_OUTPUT
          fi

      - name: Publish OTA update
        run: |
          eas update --branch ${{ steps.update-info.outputs.branch }} --message "${{ steps.update-info.outputs.message }}"

      - name: Notify deployment status
        if: always()
        run: |
          echo "‚úÖ Update published to ${{ steps.update-info.outputs.branch }} branch"
          echo "üì± Channel: ${{ steps.update-info.outputs.channel }}"
          echo "üåç Environment: ${{ steps.update-info.outputs.environment }}"

  # Job 2: Deploy Detailer Backend Server
  deploy-backend-server:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            cd /${{ secrets.DO_USERNAME }}/prismaprod/detailer
            git stash
            git pull origin master
            docker compose down --remove-orphans || true
            docker container prune -f || true

            sleep 10
            docker compose build --no-cache
            docker compose up -d
            docker compose exec detailer_server python manage.py makemigrations
            docker compose exec detailer_server python manage.py migrate
            docker system prune -f

      - name: Health Check
        run: |
          echo "Waiting for server to start..."
          sleep 30
          echo "Checking server health..."
          curl -f --connect-timeout 10 --max-time 30 http://${{ secrets.DO_HOST }}:8001/ || \
          echo "Server may still be starting, but deployment completed successfully"

  # # Job 3: Run Tests Optional
  # test:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./prisma_detailer

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: "18"
  #         cache: "npm"
  #         cache-dependency-path: "./prisma_detailer/package-lock.json"

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Run linting
  #       run: npm run lint

  #     - name: Type check
  #       run: npx tsc --noEmit
